/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;

/**
 *
 * @author sonan
 */
public class Dictionary extends javax.swing.JFrame {

    private int STT = 1;
    ArrayList<Word> list = new ArrayList<>();

    /**
     * Creates new form dictionary
     */
    public Dictionary() {
        this.addWord("one", "một");
        this.addWord("two", "hai");
        this.addWord("three", "ba");
        this.addWord("four", "bốn");
        this.addWord("five", "năm");
        this.addWord("six", "sáu");
        this.addWord("seven", "bảy");
        this.addWord("eight", "tám");
        this.addWord("nine", "chín");
        this.addWord("ten", "mười");

        initComponents();
    }

    public boolean check(String x) {
        if (BinarySearch(x) != -1) {
            return true;
        } else {
            return false;
        }
    }

    public int BinarySearch(String s) {
        int left = 0;
        int right = this.list.size() - 1;

        while (left <= right) {
            int mid = (left + right) / 2;
            Word w = this.list.get(mid);

            if (w.getEn().equals(s)) {
                return mid;
            } else if (w.getEn().compareToIgnoreCase(s) > 0) { 
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
    }

    public boolean addWord(String en, String vn) {
        if (this.check(en)) {
            return false;
        } else {
            Word newWord = new Word(STT, en, vn);
            list.add(newWord);
            this.sort();
            STT++;
            return true;
        }
    }

    public Word translate(String x) {
        if (BinarySearch(x) != -1) {
            return list.get(BinarySearch(x));
        }
        return null;
    }

    public void sort() {
        Collections.sort(this.list, new Comparator<Word>() {
            @Override
            public int compare(Word arg0, Word arg1) {
                return arg0.getEn().compareTo(arg1.getEn());
            }
        });
    }

    public void showListWord() {
        System.out.println("====================================================");
        System.out.println("ID" + "\t\t" + "EN" + "\t\t" + "VN");
        for (Word word : list) {
            System.out.println(word.getID() + "\t\t" + word.getEn() + "\t\t" + word.getVn());
        }
        System.out.println("====================================================");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        en = new javax.swing.JTextField();
        vn = new javax.swing.JTextField();
        dich = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ds = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("dictionary");

        dich.setText("Dịch");
        dich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dichActionPerformed(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel1.setText("Eng");

        jLabel2.setText("Việt Nam");

        ds.setText("danh sach");
        ds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(en)
                            .addComponent(vn, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ds, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(dich, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(en, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(dich)
                    .addComponent(ds))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dichActionPerformed
        // TODO add your handling code here:
        String str = en.getText();
        if (!str.equals("")) {
            Word x = translate(str);
            if (x != null) {
                en.setText(x.getEn());
                vn.setText(x.getVn());
            } else {
                JOptionPane.showMessageDialog(this, "tu chua co trong tu dien");
            }
        } else
            JOptionPane.showMessageDialog(this, "nhap tu can tra");
    }//GEN-LAST:event_dichActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        boolean err = false;
        String eng = en.getText();
        String viet = vn.getText();
        if (eng.equals("") || viet.equals("")) {
            err = true;
        }
        if (!err) {
            if (!this.check(eng)) {
                this.addWord(eng, viet);
                JOptionPane.showMessageDialog(this, "them thanh cong!");
            } else {
                JOptionPane.showMessageDialog(this, "tu nay da co trong tu dien!");
            }
        } else
            JOptionPane.showMessageDialog(this, "vui long nhap du thong tin");
    }//GEN-LAST:event_addActionPerformed

    private void dsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsActionPerformed
        // TODO add your handling code here:
        this.showListWord();
    }//GEN-LAST:event_dsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton dich;
    private javax.swing.JButton ds;
    private javax.swing.JTextField en;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField vn;
    // End of variables declaration//GEN-END:variables
}
